package second;

import java.awt.Color;
import java.util.*; //CALENDER CLASS
import java.awt.Container;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;//java extended version

class RegistrationFrame extends JFrame implements ActionListener
{
	/* 1. For creating a window we have to create a class and that class should be
	 * 	  the child of JFrame class.
	 * 2. Component ---> Label, Text Box etc.
	 * 3. For every component we have to make a object of that particular class.
	 * 4. Below we are creating the reference first then we will create a object of that.
	 * 5. ActionListner is a interface which recognize the mouse click event/
	 * 6. We have to override the interface
	 * */

	private JLabel l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12;//for every label there is a object of label
	private JTextField tid;//for text box
	private JPasswordField tpass;//for password field
	private JTextArea tadd;//for text field here we can write multiple lines.
	private JComboBox city,day,month,year;//for drop down list
	private JCheckBox cmo,cmu,cco;//for check box
	private JRadioButton rmale,rfemale;//for radio button
	private JButton bsubmit,breset, bsearch, bupdate;//for button
	
	private String sysdate,systime;
		
	public RegistrationFrame(String title)//constructor
	{
		//title will store the passing from the object creating point
		super(title);//call the parent class constructor and print the value on window upper ribbon
		
		Container c=getContentPane();
		/* Here imagine that Container is the drawing board and its object c is a paper.
		 * After setting the paper we can put the paper c out and then we can implement
		 * all the things over the paper.
		 * */
		c.setLayout(new GridLayout(12,2));//the window can have the window with 12 rows and 2 columns
		
		tid=new JTextField(); //object creation of Text field
		tpass=new JPasswordField();
		
		tadd=new JTextArea(5,20);
		JScrollPane tapan=new JScrollPane(tadd);
		/* For text area we have multiples line
		 * so for simplicity we can use a scroll bar
		 * for that we have to create a object and pass the object as argument of that
		 * class where we have to want the scroll bar.
		 * */
		
		String ctvalue[]={"Kolkata","Delhi","Mumbai","Chennai","Hydrabad","Pune","Bangalore"};
		city=new JComboBox(ctvalue); //drop down list object will create and the list contain passing argument value
		
		
		rmale=new JRadioButton("Male");//the word in quotation will be display near the button
		//rmale.setSelected(true);//this line will make a default selection
		
		rfemale=new JRadioButton("Female");
		ButtonGroup rgroup=new ButtonGroup();
		/* whenever we have to select a single option of the given option
		 * create radio button
		 * create a ButtonGroup object
		 * add the radio button to the button group object
		 * */
		rgroup.add(rmale);
		rgroup.add(rfemale);
		
		JPanel gpanel=new JPanel();
		/* In each grid we can store a single object
		 * we have to radio button. So if we want to show the two button in a single
		 * column
		 * 1. We have to create a object of JPanel
		 * 2. add the component object over the created JPanel object
		 * 3. display the JPanel object in a single grid.
		 * */
		gpanel.add(rmale);
		gpanel.add(rfemale);
		
		String dvalue[]=new String[31];
		for(int i=0;i<=30;i++)
		{
			dvalue[i]=String.valueOf(i+1);//converting integer to string
		}
		day=new JComboBox(dvalue);//drop down list will show the value of passing argument of dvalue
		
		String mvalue[]=new String[12];
		for(int i=0;i<=11;i++)
		{
			mvalue[i]=String.valueOf(i+1);
		}
		month=new JComboBox(mvalue);
		
		String yvalue[]=new String[12];
		int cnt=0;
		for(int i=2006;i<=2013;i++)
		{
			yvalue[cnt]=String.valueOf(i);
			cnt++;	
		}
		year=new JComboBox(yvalue);
		
		JPanel cpanel=new JPanel();
		cpanel.add(day);
		cpanel.add(month);
		cpanel.add(year);
		
		
		cmo=new JCheckBox("Movie");//
		cmu=new JCheckBox("Music");
		cco=new JCheckBox("Computer");
		JPanel ipanel=new JPanel();
		ipanel.add(cmo);
		ipanel.add(cmu);
		ipanel.add(cco);
		
		bsubmit=new JButton("Register");
		bsubmit.addActionListener(this);
		/* 1. This line will sense the mouse click and goes to the override function of ActionListner.
		 * 2. Here we have to pass the object of tha class as argument, as it is in same class
		 *    we are using this.
		 * */
				
		breset=new JButton("Show All");
				
		bsearch=new JButton("Search");
				
		bupdate=new JButton("Update");
				
		Font f=new Font("Chiller",Font.BOLD,28);
		/* Here the font object will contain the information of font style
		 * by using which we can print any line
		 * */
		l1=new JLabel("REGISTRATION");
		l1.setFont(f);//Applying the style that f object contains
		l1.setForeground(Color.BLACK);//give the color to the text
		
		Font f1=new Font("comic sans ms",Font.BOLD,16);
		l2=new JLabel("Enter Name");
		l2.setFont(f1);
		l2.setForeground(Color.GRAY);
		
		l3=new JLabel("Enter Pasword");
		l3.setFont(f1);
		l3.setForeground(Color.GRAY);
		
		l4=new JLabel("Enter Address");
		l4.setFont(f1);
		l4.setForeground(Color.GRAY);
		
		l5=new JLabel("Select City");
		l5.setFont(f1);
		l5.setForeground(Color.GRAY);
		
		l6=new JLabel("Select Gender");
		l6.setFont(f1);
		l6.setForeground(Color.GRAY);
		
		l7=new JLabel("Select DOB");
		l7.setFont(f1);
		l7.setForeground(Color.GRAY);
		
		l8=new JLabel("Select Interests");
		l8.setFont(f1);
		l8.setForeground(Color.GRAY);
		
		l9=new JLabel("Current Date");
		l9.setFont(f1);
		l9.setForeground(Color.BLACK);
		
		Calendar cal = Calendar.getInstance();
		/* getInstance is a static variable
		 * because we are calling it by classname.functionname
		 * This line will pick up the date and time from system and
		 * store that into object cal
		 * */
		
		String cday = "" + cal.get(Calendar.DATE);//here the date from cal object will convert to string and store into cday
		int x =cal.get(Calendar.MONTH);
		String cmonth = "" + (x+1);//as january in system is in zero position and we have to make it one so we use x+1
		String cyear ="" + cal.get(Calendar.YEAR);
		sysdate = cday + "/" + cmonth + "/" + cyear;
		l11=new JLabel(sysdate);		
		
	    String chr = "" + cal.get(Calendar.HOUR_OF_DAY);
		String cmin = "" + cal.get(Calendar.MINUTE);
		String csec ="" + cal.get(Calendar.SECOND);
		systime = chr + ":" + cmin + ":" + csec;
		l12=new JLabel(systime);		
		
		l10=new JLabel("Current Time");
		l10.setFont(f1);
		l10.setForeground(Color.BLACK);
		
		/* until and unless we add the objects on that c paper it will not display
		 * */
		c.add(l1);c.add(new JLabel(""));//As the next grid is blank
		c.add(l2);c.add(tid);
		c.add(l3);c.add(tpass);
		c.add(l4);c.add(tapan);
		c.add(l5);c.add(city);
		c.add(l6);c.add(gpanel);
		c.add(l7);c.add(cpanel);
		c.add(l8);c.add(ipanel);
		c.add(l9);c.add(l11);
		c.add(l10);c.add(l12);
		c.add(bsubmit);c.add(breset);
		c.add(bsearch);c.add(bupdate);
		
		setSize(500, 425);//size of window
		setLocation(200,300);//where the window in a relation with the (0,0) point of upper left corner
		setResizable(false);//this will disable the maximize option
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//we have to write this to close the application, unless after closing it will run in background
		setVisible(true);//we have to write this code to visible the window, unless it will open but not visible	
	}

	@Override
	public void actionPerformed(ActionEvent arg0)
	{
		JOptionPane.showMessageDialog(this, "register");//to print message dialog box and this is catching the passing object from addActionListner
	}
}

public class Registration 
{
	public static void main(String[] args) 
	{
        new RegistrationFrame("WELCOME...");//new object of will created and call the constructot
        //by passing the welcome as string

	}

}