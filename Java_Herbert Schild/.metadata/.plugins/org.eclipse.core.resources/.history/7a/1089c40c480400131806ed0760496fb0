package test2;

/**
 * Here, Box allows one object to initialize another
 * @author Sukanta
 *
 */

class Box {
	double width;
	double heigth;
	double depth;
	
	//Notice this constructor. It takes an object of type Box.
	Box(Box ref) {
		this.width = ref.width;
		this.heigth = ref.heigth;
		this.depth = ref.depth;
	}
	
	//constructor used when all dimensions specified
	Box(double width, double heigth, double depth) {
		this.width = width;
		this.heigth = heigth;
		this.depth = depth;
	}
	
	//constructor when no dimensions specified
	Box() {
		width = -1; // use -1 to indicate
		heigth = -1; // an uninitialized
		depth = -1; // box
	}
	
	//constructor used when cube is created
	Box(double len) {
		width = heigth = depth = len;
	}
	
	//compute and return volume
	double volume() {
		return width*heigth*depth;
	}
}

public class OverloadCons2 {
	public static void main(String[] args) {
		//create boxes using the various
		Box myBox1 = new Box(10,20,15);
		Box myBox2 = new Box();
		Box myCube = new Box(7);
		
		Box myBoxClone = new Box(myBox1); // create copy of myBox1
		
		double vol;
		
		// get volume of the first box
		vol = myBox1.volume();
		System.out.println("Volume of myBox1 is : " + vol);
		
		// get volume of the first box
		vol = myBox2.volume();
		System.out.println("Volume of myBox2 is : " + vol);
		
		// get volume of the cube
		vol = myCube.volume();
		System.out.println("Volume of cube is : " + vol);
		
		// get volume of the colne
		vol = myBoxClone.volume();
		System.out.println("Volume of colne is : " + vol);
	}

}
